#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Google credentials.
"""

import os
from pathlib import Path

def check_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª .env"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env")
    
    env_path = Path(".env")
    if not env_path.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example")
        return False
    
    print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    
    # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(env_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google credentials
    google_client_id = None
    google_client_secret = None
    google_redirect_uri = None
    
    for line in content.split('\n'):
        line = line.strip()
        if line.startswith('GOOGLE_CLIENT_ID='):
            google_client_id = line.split('=', 1)[1]
        elif line.startswith('GOOGLE_CLIENT_SECRET='):
            google_client_secret = line.split('=', 1)[1]
        elif line.startswith('GOOGLE_REDIRECT_URI='):
            google_redirect_uri = line.split('=', 1)[1]
    
    print(f"\nüì± Google Credentials:")
    print(f"   Client ID: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if google_client_id and google_client_id != 'your_google_client_id' else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    print(f"   Client Secret: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if google_client_secret and google_client_secret != 'your_google_client_secret' else '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    print(f"   Redirect URI: {google_redirect_uri or '‚ùå –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
    
    if not google_client_id or google_client_id == 'your_google_client_id':
        print("\nüö® –ü–†–û–ë–õ–ï–ú–ê: Google Client ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üí° –ó–∞–ø–æ–ª–Ω–∏—Ç–µ GOOGLE_CLIENT_ID –≤ —Ñ–∞–π–ª–µ .env")
        return False
    
    if not google_client_secret or google_client_secret == 'your_google_client_secret':
        print("\nüö® –ü–†–û–ë–õ–ï–ú–ê: Google Client Secret –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("üí° –ó–∞–ø–æ–ª–Ω–∏—Ç–µ GOOGLE_CLIENT_SECRET –≤ —Ñ–∞–π–ª–µ .env")
        return False
    
    print("\n‚úÖ Google credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
    return True

def check_google_cloud_setup():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Cloud Console"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Google Cloud Console")
    print("üìã –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("   1. ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –≤ Google Cloud Console")
    print("   2. ‚úÖ –í–∫–ª—é—á–µ–Ω Google Fit API")
    print("   3. ‚úÖ –í–∫–ª—é—á–µ–Ω Google Drive API")
    print("   4. ‚úÖ –°–æ–∑–¥–∞–Ω—ã OAuth 2.0 credentials")
    print("   5. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω redirect URI: http://localhost:8000/auth/google/callback")
    
    print("\nüîó –°—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
    print("   ‚Ä¢ Google Cloud Console: https://console.cloud.google.com/")
    print("   ‚Ä¢ APIs & Services ‚Üí Library: https://console.cloud.google.com/apis/library")
    print("   ‚Ä¢ APIs & Services ‚Üí Credentials: https://console.cloud.google.com/apis/credentials")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Health Connect")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    env_ok = check_env_file()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Google Cloud Console
    check_google_cloud_setup()
    
    print("\n" + "=" * 50)
    if env_ok:
        print("üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≤—ã–≥–ª—è–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!")
        print("üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Google Cloud Console")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π!")
        print("üîß –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —Å–Ω–æ–≤–∞")
    
    print("\nüìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: HEALTH_CONNECT_TROUBLESHOOTING.md")

if __name__ == "__main__":
    main()
