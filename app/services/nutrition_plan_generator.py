from __future__ import annotations

from app.services.llm import deepseek_complete


async def generate_cooking_plan(budget_info: dict = None) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–ª–∞–Ω –≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ 2 –¥–Ω—è —Å –ø–æ–º–æ—â—å—é –ò–ò"""
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —É—á–µ—Ç–æ–º –±—é–¥–∂–µ—Ç–∞
    budget_context = ""
    if budget_info and budget_info["type"]:
        daily_budget = budget_info["amount"] / 30  # –ü—Ä–∏–º–µ—Ä–Ω—ã–π –¥–Ω–µ–≤–Ω–æ–π –±—é–¥–∂–µ—Ç
        budget_context = f"–í–ê–ñ–ù–û: –£—á–∏—Ç—ã–≤–∞–π –±—é–¥–∂–µ—Ç –ø–∏—Ç–∞–Ω–∏—è {budget_info['description']}. –ü—Ä–∏–º–µ—Ä–Ω–æ {daily_budget:.0f} ‚ÇΩ –≤ –¥–µ–Ω—å. "
        
        if daily_budget < 300:
            budget_context += "–í—ã–±–∏—Ä–∞–π —Å–∞–º—ã–µ —ç–∫–æ–Ω–æ–º–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: –∫—Ä—É–ø—ã, –º–∞–∫–∞—Ä–æ–Ω—ã, —è–π—Ü–∞, —Å–µ–∑–æ–Ω–Ω—ã–µ –æ–≤–æ—â–∏, –∫—É—Ä–∏—Ü–∞."
        elif daily_budget < 500:
            budget_context += "–ò—Å–ø–æ–ª—å–∑—É–π –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: –º—è—Å–æ –∫—É—Ä–∏—Ü—ã/—Å–≤–∏–Ω–∏–Ω—ã, —Ä—ã–±–∞ –Ω–µ–¥–æ—Ä–æ–≥–∞—è, –æ–≤–æ—â–∏, —Ñ—Ä—É–∫—Ç—ã –ø–æ —Å–µ–∑–æ–Ω—É."
        elif daily_budget < 700:
            budget_context += "–ú–æ–∂–µ—à—å –≤–∫–ª—é—á–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –º—è—Å–æ, —Ä—ã–±—É, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –æ–≤–æ—â–∏ –∏ —Ñ—Ä—É–∫—Ç—ã."
        else:
            budget_context += "–ú–æ–∂–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã, —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã."
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª—è—Ö –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    goal_context = ""
    if budget_info and budget_info.get("body_goal"):
        goal_text = budget_info["body_goal"]
        if goal_text == "cut":
            goal_context = "–í–ê–ñ–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ —Å—É—à–∫–µ (—Å–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞). –°–æ–∑–¥–∞–π –ø–ª–∞–Ω —Å –¥–µ—Ñ–∏—Ü–∏—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π, –±–æ–ª—å—à–µ –±–µ–ª–∫–∞, –º–µ–Ω—å—à–µ —É–≥–ª–µ–≤–æ–¥–æ–≤. "
        elif goal_text == "bulk":
            goal_context = "–í–ê–ñ–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –º–∞—Å—Å–µ (–Ω–∞–±–æ—Ä –≤–µ—Å–∞). –°–æ–∑–¥–∞–π –ø–ª–∞–Ω —Å –ø—Ä–æ—Ñ–∏—Ü–∏—Ç–æ–º –∫–∞–ª–æ—Ä–∏–π, –±–æ–ª—å—à–µ —É–≥–ª–µ–≤–æ–¥–æ–≤ –∏ –±–µ–ª–∫–∞. "
        elif goal_text == "maintain":
            goal_context = "–í–ê–ñ–ù–û: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–µ—Å. –°–æ–∑–¥–∞–π —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–ª–∞–Ω –±–µ–∑ –¥–µ—Ñ–∏—Ü–∏—Ç–∞/–ø—Ä–æ—Ñ–∏—Ü–∏—Ç–∞ –∫–∞–ª–æ—Ä–∏–π. "
    
    if budget_info and budget_info.get("target_calories"):
        goal_context += f"–¶–µ–ª–µ–≤—ã–µ –∫–∞–ª–æ—Ä–∏–∏: {budget_info['target_calories']} –≤ –¥–µ–Ω—å. "
    
    system = (
        f"–¢—ã –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥ –∏ –∫—É–ª–∏–Ω–∞—Ä. {budget_context}{goal_context}"
        "–°–æ—Å—Ç–∞–≤—å –ø–ª–∞–Ω –≥–æ—Ç–æ–≤–∫–∏ –Ω–∞ 2 –¥–Ω—è —Å–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª–µ–∑–Ω—ã–º –ø–∏—Ç–∞–Ω–∏–µ–º. "
        "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –≤–∫–ª—é—á–∏ –í–°–ï —Ä–∞–∑–¥–µ–ª—ã:\n"
        "1. üìã –°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ (—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∏ —Ü–µ–Ω–∞–º–∏)\n"
        "2. üë®‚Äçüç≥ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤–∫–∏ –ø–æ –¥–Ω—è–º\n"
        "3. üî• –ö–∞–ª–æ—Ä–∏–∏ –Ω–∞ –¥–µ–Ω—å\n"
        "4. üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å\n\n"
        "–ë—É–¥—å –î–ï–¢–ê–õ–¨–ù–´–ú –∏ –ü–û–õ–ù–´–ú. –ù–µ –æ–±—Ä–µ–∑–∞–π –æ—Ç–≤–µ—Ç. "
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ - –∏—Å–ø–æ–ª—å–∑—É–π –µ–≥–æ. "
        "–ö–∞–∂–¥—ã–π —Ä–∞–∑–¥–µ–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º."
    )
    
    prompt_parts = ["–°–¥–µ–ª–∞–π —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∞ 2 –¥–Ω—è."]
    if budget_info and budget_info["type"]:
        prompt_parts.append(f"–ë—é–¥–∂–µ—Ç: {budget_info['description']}.")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–µ–ª—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if budget_info and budget_info.get("body_goal"):
        goal_text = budget_info["body_goal"]
        if goal_text == "cut":
            prompt_parts.append("–¶–µ–ª—å: —Å—É—à–∫–∞ (—Å–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞).")
        elif goal_text == "bulk":
            prompt_parts.append("–¶–µ–ª—å: –Ω–∞–±–æ—Ä –º–∞—Å—Å—ã.")
        elif goal_text == "maintain":
            prompt_parts.append("–¶–µ–ª—å: –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞.")
        else:
            prompt_parts.append(f"–¶–µ–ª—å: {goal_text}.")
    
    if budget_info and budget_info.get("target_calories"):
        prompt_parts.append(f"–¶–µ–ª–µ–≤—ã–µ –∫–∞–ª–æ—Ä–∏–∏: {budget_info['target_calories']} –≤ –¥–µ–Ω—å.")
    
    prompt_parts.append("–§–æ—Ä–º–∞—Ç: –ü–æ–∫—É–ø–∫–∏ —Å —Ü–µ–Ω–∞–º–∏, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –ö–∞–ª–æ—Ä–∏–∏/–¥–µ–Ω—å.")
    
    prompt = " ".join(prompt_parts)
    
    try:
        print(f"DEBUG: –û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ –ò–ò —Å prompt='{prompt[:100]}...' –∏ system='{system[:100]}...'")
        print(f"DEBUG: –ò—Å–ø–æ–ª—å–∑—É—é max_tokens=5000 –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø–ª–∞–Ω–∞")
        
        # –°—Ä–∞–∑—É –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ –ø–ª–∞–Ω–∞
        result = await deepseek_complete(prompt, system=system, max_tokens=5000)
        
        print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò –¥–ª–∏–Ω–æ–π {len(result) if result else 0}")
        
        if result and len(result.strip()) > 100:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞
            quality_score = check_response_quality(result)
            print(f"DEBUG: –ö–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞: {quality_score}/100")
            
            if quality_score >= 70:
                print(f"DEBUG: –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–ª–∞–Ω –æ—Ç –ò–ò")
                print(f"DEBUG: –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞: {result[:200]}...")
                print(f"DEBUG: –ü–æ—Å–ª–µ–¥–Ω–∏–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞: ...{result[-200:]}")
                print(f"DEBUG: –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò:")
                print("=" * 80)
                print(result)
                print("=" * 80)
                return result
            else:
                print(f"DEBUG: –û—Ç–≤–µ—Ç –Ω–µ–ø–æ–ª–Ω—ã–π (–∫–∞—á–µ—Å—Ç–≤–æ {quality_score}/100), –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω")
                return generate_fallback_plan(budget_info, "–û—Ç–≤–µ—Ç –æ—Ç –ò–ò –Ω–µ–ø–æ–ª–Ω—ã–π")
        else:
            print(f"DEBUG: –ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò")
            return generate_fallback_plan(budget_info, "–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò")
            
    except Exception as e:
        error_msg = str(e)
        print(f"DEBUG: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {error_msg}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
        if "timeout" in error_msg.lower() or "timed out" in error_msg.lower():
            print(f"DEBUG: –û–±–Ω–∞—Ä—É–∂–µ–Ω —Ç–∞–π–º–∞—É—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω")
            return generate_fallback_plan(budget_info, "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò")
        elif "rate limit" in error_msg.lower() or "429" in error_msg:
            print(f"DEBUG: –û–±–Ω–∞—Ä—É–∂–µ–Ω rate limit, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω")
            return generate_fallback_plan(budget_info, "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ –ò–ò")
        else:
            print(f"DEBUG: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω")
            return generate_fallback_plan(budget_info, f"–û—à–∏–±–∫–∞ –ò–ò: {error_msg}")


def check_response_quality(text: str) -> int:
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò (0-100)"""
    if not text:
        return 0
    
    score = 0
    text_lower = text.lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤
    required_sections = [
        ('—Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫', 20),
        ('–ø–æ–∫—É–ø–∫–∏', 20),
        ('–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', 20),
        ('–≥–æ—Ç–æ–≤–∫', 20),
        ('–∫–∞–ª–æ—Ä–∏–∏', 15),
        ('—Å—Ç–æ–∏–º–æ—Å—Ç—å', 15),
        ('—Ü–µ–Ω–∞', 10),
        ('—Ä—É–±–ª', 10),
        ('‚ÇΩ', 10),
    ]
    
    for section, points in required_sections:
        if section in text_lower:
            score += points
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –æ—Ç–≤–µ—Ç–∞
    if len(text) > 500:
        score += 10
    if len(text) > 1000:
        score += 10
    if len(text) > 2000:
        score += 10
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É (–Ω–∞–ª–∏—á–∏–µ —Å–ø–∏—Å–∫–æ–≤, —Ä–∞–∑–¥–µ–ª–æ–≤)
    if '‚Ä¢' in text or '-' in text:
        score += 5
    if '\n\n' in text:
        score += 5
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª
    return min(score, 100)


def generate_fallback_plan(budget_info: dict = None, error_msg: str = "") -> str:
    """–°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–µ –ò–ò"""
    budget_text = ""
    daily_budget = 0
    
    if budget_info and budget_info["type"]:
        daily_budget = budget_info["amount"] / 30
        budget_text = f"\n\nüí∞ <b>–ë—é–¥–∂–µ—Ç:</b> {budget_info['description']} (~{daily_budget:.0f} ‚ÇΩ/–¥–µ–Ω—å)"
    
    error_info = f"\n\n‚ö†Ô∏è <b>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</b> –ü–ª–∞–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ (–ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {error_msg})"
    
    # –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω –ø–æ–¥ –±—é–¥–∂–µ—Ç –∏ —Ü–µ–ª–∏
    goal_info = ""
    if budget_info and budget_info.get("body_goal"):
        goal_text = budget_info["body_goal"]
        if goal_text == "cut":
            goal_info = "\n\nüéØ <b>–¶–µ–ª—å:</b> –°—É—à–∫–∞ (—Å–Ω–∏–∂–µ–Ω–∏–µ –≤–µ—Å–∞)\n"
        elif goal_text == "bulk":
            goal_info = "\n\nüéØ <b>–¶–µ–ª—å:</b> –ù–∞–±–æ—Ä –º–∞—Å—Å—ã\n"
        elif goal_text == "maintain":
            goal_info = "\n\nüéØ <b>–¶–µ–ª—å:</b> –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–µ—Å–∞\n"
    
    if budget_info and budget_info.get("target_calories"):
        goal_info += f"üî• <b>–¶–µ–ª–µ–≤—ã–µ –∫–∞–ª–æ—Ä–∏–∏:</b> {budget_info['target_calories']} –≤ –¥–µ–Ω—å\n"
    
    if daily_budget > 0:
        if daily_budget < 200:  # –û—á–µ–Ω—å —ç–∫–æ–Ω–æ–º–Ω—ã–π
            products = """‚Ä¢ –ì—Ä–µ—á–∫–∞ - 1 –∫–≥ (120-180 ‚ÇΩ)
‚Ä¢ –†–∏—Å - 500 –≥ (80-120 ‚ÇΩ)
‚Ä¢ –ú–∞–∫–∞—Ä–æ–Ω—ã - 1 –∫–≥ (120-180 ‚ÇΩ)
‚Ä¢ –Ø–π—Ü–∞ - 15 —à—Ç (120-180 ‚ÇΩ)
‚Ä¢ –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 3 –∫–≥ (180-300 ‚ÇΩ)
‚Ä¢ –ú–æ—Ä–∫–æ–≤—å - 1 –∫–≥ (60-100 ‚ÇΩ)
‚Ä¢ –õ—É–∫ - 1 –∫–≥ (40-80 ‚ÇΩ)
‚Ä¢ –ß–µ—Å–Ω–æ–∫ - 2 –≥–æ–ª–æ–≤–∫–∏ (40-80 ‚ÇΩ)
‚Ä¢ –¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞ - 200 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ - 500 –º–ª (80-120 ‚ÇΩ)
‚Ä¢ –°–æ–ª—å, —Å–ø–µ—Ü–∏–∏ - (50-100 ‚ÇΩ)"""
            total_cost = "800-1200 ‚ÇΩ"
        elif daily_budget < 400:  # –≠–∫–æ–Ω–æ–º–Ω—ã–π
            products = """‚Ä¢ –ö—É—Ä–∏—Ü–∞ –≥—Ä—É–¥–∫–∞ - 1 –∫–≥ (400-600 ‚ÇΩ)
‚Ä¢ –†–∏—Å - 500 –≥ (80-120 ‚ÇΩ)
‚Ä¢ –ì—Ä–µ—á–∫–∞ - 500 –≥ (100-150 ‚ÇΩ)
‚Ä¢ –ú–∞–∫–∞—Ä–æ–Ω—ã - 500 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –Ø–π—Ü–∞ - 10 —à—Ç (80-120 ‚ÇΩ)
‚Ä¢ –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 2 –∫–≥ (120-200 ‚ÇΩ)
‚Ä¢ –ú–æ—Ä–∫–æ–≤—å - 1 –∫–≥ (60-100 ‚ÇΩ)
‚Ä¢ –õ—É–∫ - 1 –∫–≥ (40-80 ‚ÇΩ)
‚Ä¢ –ß–µ—Å–Ω–æ–∫ - 2 –≥–æ–ª–æ–≤–∫–∏ (40-80 ‚ÇΩ)
‚Ä¢ –¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞ - 200 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ - 500 –º–ª (80-120 ‚ÇΩ)
‚Ä¢ –°–æ–ª—å, —Å–ø–µ—Ü–∏–∏ - (50-100 ‚ÇΩ)"""
            total_cost = "1200-1800 ‚ÇΩ"
        else:  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π
            products = """‚Ä¢ –ö—É—Ä–∏—Ü–∞ –≥—Ä—É–¥–∫–∞ - 1.5 –∫–≥ (600-900 ‚ÇΩ)
‚Ä¢ –°–≤–∏–Ω–∏–Ω–∞ - 500 –≥ (300-450 ‚ÇΩ)
‚Ä¢ –†–∏—Å - 1 –∫–≥ (160-240 ‚ÇΩ)
‚Ä¢ –ì—Ä–µ—á–∫–∞ - 500 –≥ (100-150 ‚ÇΩ)
‚Ä¢ –ú–∞–∫–∞—Ä–æ–Ω—ã - 500 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –Ø–π—Ü–∞ - 15 —à—Ç (120-180 ‚ÇΩ)
‚Ä¢ –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 2 –∫–≥ (120-200 ‚ÇΩ)
‚Ä¢ –ú–æ—Ä–∫–æ–≤—å - 1 –∫–≥ (60-100 ‚ÇΩ)
‚Ä¢ –õ—É–∫ - 1 –∫–≥ (40-80 ‚ÇΩ)
‚Ä¢ –ß–µ—Å–Ω–æ–∫ - 2 –≥–æ–ª–æ–≤–∫–∏ (40-80 ‚ÇΩ)
‚Ä¢ –¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞ - 300 –≥ (90-150 ‚ÇΩ)
‚Ä¢ –ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ - 500 –º–ª (80-120 ‚ÇΩ)
‚Ä¢ –°–æ–ª—å, —Å–ø–µ—Ü–∏–∏ - (50-100 ‚ÇΩ)"""
            total_cost = "1800-2500 ‚ÇΩ"
    else:
        # –ï—Å–ª–∏ –±—é–¥–∂–µ—Ç –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–ª–∞–Ω
        products = """‚Ä¢ –ö—É—Ä–∏—Ü–∞ –≥—Ä—É–¥–∫–∞ - 1 –∫–≥ (400-600 ‚ÇΩ)
‚Ä¢ –†–∏—Å - 500 –≥ (80-120 ‚ÇΩ)
‚Ä¢ –ì—Ä–µ—á–∫–∞ - 500 –≥ (100-150 ‚ÇΩ)
‚Ä¢ –ú–∞–∫–∞—Ä–æ–Ω—ã - 500 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –Ø–π—Ü–∞ - 10 —à—Ç (80-120 ‚ÇΩ)
‚Ä¢ –ö–∞—Ä—Ç–æ—Ñ–µ–ª—å - 2 –∫–≥ (120-200 ‚ÇΩ)
‚Ä¢ –ú–æ—Ä–∫–æ–≤—å - 1 –∫–≥ (60-100 ‚ÇΩ)
‚Ä¢ –õ—É–∫ - 1 –∫–≥ (40-80 ‚ÇΩ)
‚Ä¢ –ß–µ—Å–Ω–æ–∫ - 2 –≥–æ–ª–æ–≤–∫–∏ (40-80 ‚ÇΩ)
‚Ä¢ –¢–æ–º–∞—Ç–Ω–∞—è –ø–∞—Å—Ç–∞ - 200 –≥ (60-100 ‚ÇΩ)
‚Ä¢ –ú–∞—Å–ª–æ –ø–æ–¥—Å–æ–ª–Ω–µ—á–Ω–æ–µ - 500 –º–ª (80-120 ‚ÇΩ)
‚Ä¢ –°–æ–ª—å, —Å–ø–µ—Ü–∏–∏ - (50-100 ‚ÇΩ)"""
        total_cost = "1200-1800 ‚ÇΩ"
    
    return f"""üçΩÔ∏è <b>–ü–ª–∞–Ω –ø–∏—Ç–∞–Ω–∏—è –Ω–∞ 2 –¥–Ω—è</b>{budget_text}{goal_info}

üìã <b>–°–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫:</b>
{products}

üë®‚Äçüç≥ <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤–∫–∏:</b>

<b>–î–µ–Ω—å 1 - –ö—É—Ä–∏–Ω–∞—è –≥—Ä—É–¥–∫–∞ —Å —Ä–∏—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏:</b>
‚Ä¢ –û–±–∂–∞—Ä—å—Ç–µ –∫—É—Ä–∏–Ω—É—é –≥—Ä—É–¥–∫—É –Ω–∞ —Å—Ä–µ–¥–Ω–µ–º –æ–≥–Ω–µ 15-20 –º–∏–Ω—É—Ç
‚Ä¢ –û—Ç–≤–∞—Ä–∏—Ç–µ —Ä–∏—Å (1 —Å—Ç–∞–∫–∞–Ω –Ω–∞ 2 —Å—Ç–∞–∫–∞–Ω–∞ –≤–æ–¥—ã)
‚Ä¢ –ù–∞—Ä–µ–∂—å—Ç–µ –æ–≤–æ—â–∏ –∏ –æ–±–∂–∞—Ä—å—Ç–µ –∏—Ö 5-7 –º–∏–Ω—É—Ç
‚Ä¢ –ü–æ–¥–∞–≤–∞–π—Ç–µ —Å –≥–∞—Ä–Ω–∏—Ä–æ–º

<b>–î–µ–Ω—å 2 - –ì—Ä–µ—á–∫–∞ —Å –∫—É—Ä–∏—Ü–µ–π –∏ —Å–∞–ª–∞—Ç–æ–º:</b>
‚Ä¢ –û—Ç–≤–∞—Ä–∏—Ç–µ –≥—Ä–µ—á–∫—É (1 —Å—Ç–∞–∫–∞–Ω –Ω–∞ 2 —Å—Ç–∞–∫–∞–Ω–∞ –≤–æ–¥—ã)
‚Ä¢ –†–∞–∑–æ–≥—Ä–µ–π—Ç–µ –∫—É—Ä–∏–Ω—É—é –≥—Ä—É–¥–∫—É
‚Ä¢ –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ —Å–∞–ª–∞—Ç –∏–∑ —Å–≤–µ–∂–∏—Ö –æ–≤–æ—â–µ–π
‚Ä¢ –ó–∞–ø—Ä–∞–≤—å—Ç–µ —Å–∞–ª–∞—Ç –º–∞—Å–ª–æ–º –∏ –ª–∏–º–æ–Ω–Ω—ã–º —Å–æ–∫–æ–º

üî• <b>–ö–∞–ª–æ—Ä–∏–∏:</b> 1800-2200 –∫–∫–∞–ª/–¥–µ–Ω—å
üíµ <b>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:</b> {total_cost}

üí° <b>–°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –ì–æ—Ç–æ–≤—å—Ç–µ –Ω–∞ 2 –¥–Ω—è –≤–ø–µ—Ä–µ–¥
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –±–ª—é–¥
‚Ä¢ –ó–∞–º–æ—Ä–∞–∂–∏–≤–∞–π—Ç–µ –≥–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞{error_info}"""
