#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–Ω—è
—Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –∏–∑ todo-–ª–∏—Å—Ç–∞
"""

import asyncio
import sys
import os
from datetime import date, datetime
from sqlalchemy import select

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.db.session import session_scope
from app.db.models import User, Todo, Motivation, Goal, GoalStatus, GoalScope
from app.services.daily_reminders import generate_perfect_day_plan


async def test_perfect_day_planning():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–Ω—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–Ω—è")
    print("=" * 60)
    
    async with session_scope() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        user = (await session.execute(select(User))).scalar_one_or_none()
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        print(f"üë§ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.telegram_id}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ä–µ–º–µ–Ω–∞–º–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        test_todos = [
            {
                "title": "–£—Ç—Ä–µ–Ω–Ω—è—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                "description": "–ö–∞—Ä–¥–∏–æ + —Å–∏–ª–æ–≤–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                "reminder_time": "06:00",
                "priority": "high"
            },
            {
                "title": "–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º",
                "description": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏",
                "reminder_time": "09:00",
                "priority": "high"
            },
            {
                "title": "–û–±–µ–¥",
                "description": "–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ",
                "reminder_time": "13:00",
                "priority": "medium"
            },
            {
                "title": "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π",
                "description": "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π —Å—Ç–µ–Ω–¥–∞–ø",
                "reminder_time": "15:00",
                "priority": "high"
            },
            {
                "title": "–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏",
                "description": "–†–∞–∑–≤–∏—Ç–∏–µ –∏ —Å–∞–º–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ",
                "reminder_time": None,
                "priority": "medium"
            },
            {
                "title": "–í–µ—á–µ—Ä–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞",
                "description": "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö",
                "reminder_time": None,
                "priority": "low"
            }
        ]
        
        print("\nüìù –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏...")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
        await session.execute(
            select(Todo).where(
                Todo.user_id == user.id,
                Todo.due_date == date.today()
            )
        )
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
        for todo_data in test_todos:
            todo = Todo(
                user_id=user.id,
                title=todo_data["title"],
                description=todo_data["description"],
                due_date=date.today(),
                priority=todo_data["priority"],
                is_daily=False,
                reminder_time=todo_data["reminder_time"],
                is_reminder_active=bool(todo_data["reminder_time"])
            )
            session.add(todo)
        
        await session.commit()
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        todos = (await session.execute(
            select(Todo).where(
                Todo.user_id == user.id,
                Todo.due_date == date.today()
            ).order_by(Todo.reminder_time.asc().nullslast(), Todo.priority.desc())
        )).scalars().all()
        
        print("\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏:")
        for todo in todos:
            time_info = f" ‚è∞{todo.reminder_time}" if todo.reminder_time else ""
            priority_emoji = {"high": "üî¥", "medium": "üü°", "low": "üü¢"}.get(todo.priority, "‚ö™")
            print(f"  ‚Ä¢ {priority_emoji} {todo.title}{time_info} - {todo.description}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–ª–∞–Ω –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–Ω—è
        print("\n‚öîÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–ª–∞–Ω –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –¥–Ω—è...")
        plan = await generate_perfect_day_plan(user.id, session)
        
        print("\n" + "=" * 60)
        print("üìã –ü–õ–ê–ù –ò–î–ï–ê–õ–¨–ù–û–ì–û –î–ù–Ø:")
        print("=" * 60)
        print(plan)
        print("=" * 60)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–Ω
        print("\nüîç –ê–Ω–∞–ª–∏–∑ –ø–ª–∞–Ω–∞:")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –ø–ª–∞–Ω —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
        time_mentions = []
        for line in plan.split('\n'):
            if ':' in line and any(char.isdigit() for char in line):
                time_mentions.append(line.strip())
        
        if time_mentions:
            print("‚úÖ –ü–ª–∞–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ä–∞–º–∫–∏:")
            for mention in time_mentions[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
                print(f"  ‚Ä¢ {mention}")
        else:
            print("‚ö†Ô∏è –ü–ª–∞–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —è–≤–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ä–∞–º–æ–∫")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –∑–∞–¥–∞—á
        task_mentions = []
        for todo in todos:
            if todo.title.lower() in plan.lower():
                task_mentions.append(todo.title)
        
        if task_mentions:
            print(f"‚úÖ –ü–ª–∞–Ω —É—á–∏—Ç—ã–≤–∞–µ—Ç {len(task_mentions)} –∏–∑ {len(todos)} –∑–∞–¥–∞—á:")
            for task in task_mentions:
                print(f"  ‚Ä¢ {task}")
        else:
            print("‚ö†Ô∏è –ü–ª–∞–Ω –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —É–ø–æ–º–∏–Ω–∞–Ω–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–¥–∞—á")
        
        print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(test_perfect_day_planning())
